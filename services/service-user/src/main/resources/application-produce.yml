spring:
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    sentinel:
      transport:
        port: 9150 #跟控制台交流的端口,随意指定一个未使用的端口即可
        dashboard: 127.0.0.1:8858 # 指定控制台服务的地址
  datasource:
    url: jdbc:mysql://127.0.0.1:4005/user?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&rewriteBatchedStatements=true
    username: root
    password: 123
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    database: 0
    host: localhost
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

#seata配置
seata:
  enabled: true
  application-id: service-supervision
  #这里的名字与file.conf中vgroup_mapping.my_test_tx_group = "default"相同
  tx-service-group: default
  enable-auto-data-source-proxy: true
  #  use-jdk-proxy: false
  service:
    #这里的名字与file.conf中vgroup_mapping.my_test_tx_group = "default"相同
    vgroup-mapping:
      my_test_tx_group: default
      #这里的名字与file.conf中default.grouplist = "127.0.0.1:8091"相同
    grouplist:
      default: 127.0.0.1:8091
  #      disable-global-transaction: false
  config:
    type: nacos
    nacos:
      namespace:
      #这里的地址就是你的nacos的地址,可以更换为线上
      serverAddr: 127.0.0.1:8848
      #这里的名字就是registry.conf中 nacos的group名字
      group: SEATA_GROUP
      userName: "nacos"
      password: "nacos"
  registry:
    type: nacos
    nacos:
      application: seata-server
      #这里的地址就是你的nacos的地址,可以更换为线上
      server-addr: 127.0.0.1:8848
      #这里的名字就是registry.conf中 nacos的group名字
      group: SEATA_GROUP
      namespace:
      userName: "nacos"
      password: "nacos"
